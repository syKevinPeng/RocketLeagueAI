
# car_obj
# inv_car_obj
# ball_obj
# inv_ball_obj
# player_obj
# exercise_state_obj

# car_dict = \
#     {'position': [0., 200.,    17.  ], 
#     'quaternion': [ 0.853726  , -0.0024897 ,  0.00409195,  0.5207    ], 
#     'linear_velocity':  [0., 0., 0.341],
#     'angular_velocity': [0.,  0.     ,  0.     ], 
#     '_euler_angles': np.array([0., 0., 0.]), 
#     '_rotation_mtx': np.array([[0., 0., 0.],
#                                [0., 0., 0.],
#                                [0., 0., 0.]]), 
#     '_has_computed_rot_mtx': False, 
#     '_has_computed_euler_angles': False}
# inverted_car_dict = \
#     {'position': [0., 200.,   17.  ], 
#     'quaternion': [ 0.5207    ,  0.00409195,  0.0024897 , -0.853726  ], 
#     'linear_velocity':  [0.   , -0.   ,  0.341], 
#     'angular_velocity': [0., 0. , 0. ], 
#     '_euler_angles': np.array([0., 0., 0.]), 
#     '_rotation_mtx': np.array([[0., 0., 0.],
#                                [0., 0., 0.],
#                                [0., 0., 0.]]), 
#     '_has_computed_rot_mtx': False, 
#     '_has_computed_euler_angles': False}
# ball_dict = \
#        {'position': [ 0.  ,  0.  , 92.74], 
#         'quaternion': [1., 1., 1., 1.], 
#         'linear_velocity': [0., 0., 0.], 
#         'angular_velocity': [0., 0., 0.], 
#         '_euler_angles': np.array([0., 0., 0.]), 
#         '_rotation_mtx': np.array([[0., 0., 0.],
#                                 [0., 0., 0.],
#                                 [0., 0., 0.]]), 
#         '_has_computed_rot_mtx': False, 
#         '_has_computed_euler_angles': False}
# inv_ball_dict = \
#      {'position': [-0.  , -0.  , 92.74],
#      'quaternion': [1., 1., 1., 1.],
#      'linear_velocity': [-0., -0.,  0.],
#      'angular_velocity': [-0., -0.,  0.],
#      '_euler_angles': np.array([0., 0., 0.]),
#      '_rotation_mtx': np.array([[0., 0., 0.],
#                              [0., 0., 0.],
#                              [0., 0., 0.]]),
#      '_has_computed_rot_mtx': False,
#      '_has_computed_euler_angles': False}

# car_obj = PhysicsObject(position=car_dict['position'], 
#                         quaternion=car_dict['quaternion'], 
#                         linear_velocity=car_dict['linear_velocity'], 
#                         angular_velocity=car_dict['angular_velocity'])
# inv_car_obj = PhysicsObject(position=inverted_car_dict['position'], 
#                             quaternion=inverted_car_dict['quaternion'], 
#                             linear_velocity=inverted_car_dict['linear_velocity'], 
#                             angular_velocity=inverted_car_dict['angular_velocity'])
# ball_obj = PhysicsObject(position=ball_dict['position'], 
#                         quaternion=ball_dict['quaternion'], 
#                         linear_velocity=ball_dict['linear_velocity'], 
#                         angular_velocity=ball_dict['angular_velocity'])
# inv_ball_obj = PhysicsObject(position=inv_ball_dict['position'], 
#                             quaternion=inv_ball_dict['quaternion'], 
#                             linear_velocity=inv_ball_dict['linear_velocity'], 
#                             angular_velocity=inv_ball_dict['angular_velocity'])
# player_dict = \
#            {'car_id': 1, 
#             'team_num': 0, 
#             'match_goals': 0, 
#             'match_saves': 0, 
#             'match_shots': 0, 
#             'match_demolishes': 0, 
#             'boost_pickups': 0, 
#             'is_demoed': False, 
#             'on_ground': True, 
#             'ball_touched': False, 
#             'has_flip': True, 
#             'boost_amount': 0.33, 
#             'car_data': car_obj, 
#             'inverted_car_data': inv_car_obj}

# player_obj = PlayerData()
# player_obj.set_vals_from_dict(player_dict)

# exercise_state_dict = {
#     'game_type': 0, 
#     'blue_score': 0, 
#     'orange_score': 0, 
#     'last_touch': -1, 
#     'players': [player_obj], 
#     'ball': ball_obj, 
#     'inverted_ball': inv_ball_obj, 
#     'boost_pads': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
#                             1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
#                          dtype=np.float32), 
#     'inverted_boost_pads': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
#                                      1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
#                                   dtype=np.float32)
# }

# exercise_state_obj = GameState()
# exercise_state_obj.set_vals_from_dict(exercise_state_dict)

# from pprint import pprint
# print("car_obj vals: ")
# pprint(car_obj.__dict__)
# print("inv_car_obj vals: ")
# pprint(inv_car_obj.__dict__)
# print()
# print("ball_obj vals: ")
# pprint(ball_obj.__dict__)
# print("inv_ball_obj vals: ")
# pprint(inv_ball_obj.__dict__)
# print()
# print("exercise_state vals:")
# pprint(exercise_state_obj.__dict__)

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------- CODE ABOVE -------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------


recieved_state: 
    {'game_type': 0, 
    'blue_score': 0, 
    'orange_score': 0, 
    'last_touch': -1, 
    'players': [<rlgym.utils.gamestates.player_data.PlayerData object at 0x000002506F48DDC0>], 
    'ball': <rlgym.utils.gamestates.physics_object.PhysicsObject object at 0x000002506F48B9D0>, 
    'inverted_ball': <rlgym.utils.gamestates.physics_object.PhysicsObject object at 0x000002506F48DFA0>, 
    'boost_pads': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
      dtype=float32), 
      'inverted_boost_pads': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
      dtype=float32), 
      'state_str': '8 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 92.74 0 0 0 0 0 0 -0 -0 92.74 -0 -0 0 -0 -0 0 1 0 -1510.55 -2013.58 17 0.921004 -0.00183693 0.00441025 0.389525 972.511 1000.94 0.101 -0.00051 -0.00021 0.01721 1510.55 2013.58 17 0.389525 0.00441025 0.00183693 -0.921004 -972.511 -1000.94 0.101 0.00051 0.00021 0.01721 0 0 0 0 1 0 1 0 1 0.156408 '}

<rlgym.utils.gamestates.player_data.PlayerData object:
           {'car_id': 1, 
            'team_num': 0, 
            'match_goals': 0, 
            'match_saves': 0, 
            'match_shots': 0, 
            'match_demolishes': 0, 
            'boost_pickups': 0, 
            'is_demoed': False, 
            'on_ground': True, 
            'ball_touched': False, 
            'has_flip': True, 
            'boost_amount': 0.33333298563957214, 
            'car_data': <rlgym.utils.gamestates.physics_object.PhysicsObject object at 0x000002019D1A4FD0>, 
            'inverted_car_data': <rlgym.utils.gamestates.physics_object.PhysicsObject object at 0x000002019D1A4520>}

car_data:
        {'position': array([-2047.98, -2560.02,    17.  ], dtype=float32), 
        'quaternion': array([ 0.853726  , -0.0024897 ,  0.00409195,  0.5207    ], dtype=float32), 
        'linear_velocity': array([0.   , 0.   , 0.341], dtype=float32),
        'angular_velocity': array([-0.00011,  0.     ,  0.     ], dtype=float32), 
        '_euler_angles': array([0., 0., 0.]), 
        '_rotation_mtx': array([[0., 0., 0.],
                                [0., 0., 0.],
                                [0., 0., 0.]]), 
        '_has_computed_rot_mtx': False, 
        '_has_computed_euler_angles': False}
inverted_car_data
        {'position': array([2047.98, 2560.02,   17.  ], dtype=float32), 
        'quaternion': array([ 0.5207    ,  0.00409195,  0.0024897 , -0.853726  ], dtype=float32), 
        'linear_velocity': array([-0.   , -0.   ,  0.341], dtype=float32), 
        'angular_velocity': array([ 0.00011, -0.     ,  0.     ], dtype=float32), 
        '_euler_angles': array([0., 0., 0.]), 
        '_rotation_mtx': array([[0., 0., 0.],
                                [0., 0., 0.],
                                [0., 0., 0.]]), 
        '_has_computed_rot_mtx': False, 
        '_has_computed_euler_angles': False}


BALL: <rlgym.utils.gamestates.physics_object.PhysicsObject object ...>.__dict__ = 
       {'position': array([ 0.  ,  0.  , 92.74], dtype=float32), 
        'quaternion': array([1., 1., 1., 1.]), 
        'linear_velocity': array([0., 0., 0.], dtype=float32), 
        'angular_velocity': array([0., 0., 0.], dtype=float32), 
        '_euler_angles': array([0., 0., 0.]), 
        '_rotation_mtx': array([[0., 0., 0.],
                                [0., 0., 0.],
                                [0., 0., 0.]]), 
        '_has_computed_rot_mtx': False, 
        '_has_computed_euler_angles': False}

INV_BALL: <rlgym.utils.gamestates.physics_object.PhysicsObject...>.__dict__ =
     {'position': array([-0.  , -0.  , 92.74], dtype=float32),
     'quaternion': array([1., 1., 1., 1.]),
     'linear_velocity': array([-0., -0.,  0.], dtype=float32),
     'angular_velocity': array([-0., -0.,  0.], dtype=float32),
     '_euler_angles': array([0., 0., 0.]),
     '_rotation_mtx': array([[0., 0., 0.],
                             [0., 0., 0.],
                             [0., 0., 0.]]),
     '_has_computed_rot_mtx': False,
     '_has_computed_euler_angles': False}



     1x == 40% GPU
     100x == 10% GPU










{'envs': [<Monitor<Gym instance>>], 
 'num_envs': 1, 'observation_space': Box(-inf, inf, (76,), float32), \
 'action_space': Box(-1.0, 1.0, (8,), float32), 
 'keys': [None], 
 'buf_obs': OrderedDict([(None, array([[-8.6956516e-06, -8.6956516e-06,  4.0391304e-02,  0.0000000e+00,
         0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  0.0000000e+00,
         0.0000000e+00,  5.2545846e-01, -1.0000000e+00,  3.1517573e-02,
        -1.0000000e+00,  8.1363803e-01,  0.0000000e+00,  0.0000000e+00,
         1.0000000e+00,  1.0000000e+00,  1.0000000e+00,  1.0000000e+00,
         0.0000000e+00,  1.0000000e+00,  1.0000000e+00,  1.0000000e+00,
         1.0000000e+00,  1.0000000e+00,  1.0000000e+00,  1.0000000e+00,
         1.0000000e+00,  1.0000000e+00,  1.0000000e+00,  1.0000000e+00,
         1.0000000e+00,  1.0000000e+00,  1.0000000e+00,  1.0000000e+00,
         1.0000000e+00,  1.0000000e+00,  1.0000000e+00,  1.0000000e+00,
         1.0000000e+00,  1.0000000e+00,  1.0000000e+00,  1.0000000e+00,
         1.0000000e+00,  1.0000000e+00,  1.0000000e+00,  1.0000000e+00,
         1.0000000e+00,  1.0000000e+00,  1.0000000e+00,  1.3767912e+00,
         1.7949955e+00,  2.3500001e-02,  2.4277869e-01,  2.0708738e-01,
         6.4652607e-02, -1.3767999e+00, -1.7950042e+00,  1.6891304e-02,
        -9.6840215e-01, -2.4930441e-01, -6.6712243e-03, -2.0985597e-01,
         8.0013150e-01,  5.6191641e-01, -2.4277869e-01, -2.0708738e-01,
        -6.4652607e-02,  1.0884638e+00, -1.0957212e+00,  3.6109391e-01,
         9.3339998e-01,  0.0000000e+00,  0.0000000e+00,  0.0000000e+00]],
      dtype=float32))]), 
 'buf_dones': array([False]), 
 'buf_rews': array([-2.4059148], dtype=float32), 
 'buf_infos': [{'state': <rlgym.utils.gamestates.game_state.GameState object at 0x000001CA347F6C40>, 'result': 0}], 
 'actions': array([[ 0.52545846, -1.        ,  0.03151757, -1.        ,  0.81363803, 0.        ,  0.        ,  1.        ]], dtype=float32), 
 'metadata': {'render.modes': []}}